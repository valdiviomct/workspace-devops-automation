name: Java API CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ARTFACT_NAME: "api=${{ github.sha }}.jar"
  IMAGE_NAME: "java-api:${{ github.sha }}"
  REGISTRY_NAME: ${{ secrets.AZURE_REGISTRY_NAME }}
  REGISTRY_IMAGE: "${{ secrets.AZURE_REGISTRY_NAME }}//java-api:${{ github.sha }}"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }} .

      - name: Trivy Scan (Image)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}
          format: table
          exite-code: 0
          severity: HIGH,CRITICAL

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
       
      - name: Docker Login to ACR
        run: az acr login --name ${{ env.REGISTRY_NAME }}

      - name: Tag Docker Image
        run: docker tag ${{ env.IMAGE_NAME }} ${{ env.REGISTRY_IMAGE }}
     
      - name: Push to Azure Container Registry
        run: docker push ${{ env.REGISTRY_IMAGE }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
         name: java-api-artifact
         path: target/*.jar

  deploy-stagin:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
        - name: Download JAR
          uses: actions/download-artifact@v4
          with:
            name: java-api-artifact
        - name: fake deploy
          run: |
            echo " Build: $ {{ env.ARTIFACT_NAME }}"
            echo " Fake deploy to: https://stoging.example.com"
